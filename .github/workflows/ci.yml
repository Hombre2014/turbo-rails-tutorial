name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          bundler: '2.6.3'

      - name: Update RubyGems
        run: |
          gem update --system 3.3.22
          bundle install

      - name: Update platforms
        run: |
          bundle lock --add-platform x86_64-linux
          bundle lock --add-platform ruby
          bundle install

      - name: Install gems
        run: |
          bundle config set --local without "development"
          bundle install

      - name: Update bundler
        run: |
          gem update --system
          gem install bundler
          bundle config set --local frozen false
          bundle update --bundler

      - name: Make files executable
        run: |
          sed -i "1s/ruby.exe/ruby/" bin/*
          chmod +x bin/*

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager --ignore-config config/brakeman.ignore

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          bundler: '2.6.3'

      - name: Update RubyGems
        run: |
          gem update --system 3.3.22
          bundle install

      - name: Update platforms
        run: |
          bundle lock --add-platform x86_64-linux
          bundle lock --add-platform ruby
          bundle install

      - name: Update bundler
        run: |
          gem update --system
          gem install bundler
          bundle config set --local frozen false
          bundle update --bundler

      - name: Make files executable
        run: |
          sed -i "1s/ruby.exe/ruby/" bin/*
          chmod +x bin/*

      - name: Run linters
        run: |
          bundle config set --local without "development"
          bundle install
          bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
          bundler: '2.6.3'

      - name: Update RubyGems
        run: |
          gem update --system 3.3.22
          bundle install

      - name: Update platforms
        run: |
          bundle lock --add-platform x86_64-linux
          bundle lock --add-platform ruby
          bundle install

      - name: Install gems
        run: |
          bundle config set --local without "development"
          bundle install

      - name: Update bundler
        run: |
          gem update --system
          gem install bundler
          bundle config set --local frozen false
          bundle update --bundler

      - name: Make files executable
        run: |
          sed -i "1s/ruby.exe/ruby/" bin/*
          chmod +x bin/*

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bin/rails db:test:prepare
          bin/rails test
          bin/rails test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
